{"version":3,"sources":["src/js/utils.js","src/js/chrome/getusermedia.js","src/js/chrome/getdisplaymedia.js","src/js/chrome/chrome_shim.js","src/js/edge/filtericeservers.js","node_modules/sdp/sdp.js","node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","src/js/edge/getusermedia.js","src/js/edge/getdisplaymedia.js","src/js/edge/edge_shim.js","src/js/firefox/getusermedia.js","src/js/firefox/getdisplaymedia.js","src/js/firefox/firefox_shim.js","src/js/safari/safari_shim.js","src/js/common_shim.js","src/js/adapter_factory.js","src/js/adapter_core.js"],"names":["logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","length","parseInt","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","e","modifiedEvent","_eventMap","nativeRemoveEventListener","removeEventListener","unwrappedCb","Object","defineProperty","get","set","enumerable","configurable","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","detectBrowser","navigator","result","browser","version","mozGetUserMedia","userAgent","webkitGetUserMedia","mediaDevices","logging","utils","shimGetUserMedia","browserDetails","constraintsToChrome_","c","mandatory","optional","cc","keys","forEach","key","r","ideal","undefined","exact","min","max","oldname_","prefix","name","charAt","toUpperCase","slice","oc","push","mix","advanced","concat","shimConstraints_","constraints","func","JSON","parse","stringify","audio","remap","obj","a","b","video","face","facingMode","getSupportedFacingModeLies","matches","getSupportedConstraints","enumerateDevices","then","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","toString","getUserMedia","onSuccess","onError","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","track","stop","DOMException","Promise","reject","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","walkStats","stats","base","resultSet","has","id","endsWith","filterStats","outbound","streamStatsType","filteredResult","Map","trackStats","value","type","trackIdentifier","trackStat","trackId","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","transceiver","receiver","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","event","Event","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimSenderReceiverGetStats","RTCRtpReceiver","getStats","origGetReceivers","receivers","srcElement","origGetStats","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","map","streamId","alreadyExists","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","signalingState","call","t","oldStream","resolve","method","nativeMethod","args","isLegacyCall","description","desc","replaceInternalStreamId","origSetLocalDescription","setLocalDescription","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","selector","successCallback","errorCallback","fixChromeStats_","response","standardReport","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","RTCIceCandidate","nativeAddIceCandidate","addIceCandidate","fixNegotiationNeeded","target","filterIceServers","iceServers","edgeVersion","hasTurn","server","urls","url","isString","validTurn","startsWith","SDPUtils","require","fixStatsType","inboundrtp","outboundrtp","candidatepair","writeMediaSection","caps","dtlsRole","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","_initialTrackId","msid","sendEncodingParameters","ssrc","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","i","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","clockRate","numChannels","Math","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","code","NotSupportedError","InvalidAccessError","TypeError","OperationError","module","exports","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","fireAddTrack","trackEvent","setTimeout","_dispatchEvent","config","_eventTarget","document","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","enabled","_createIceGatherer","sdpMLineIndex","shift","writable","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","assign","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","default","getCapabilities","codec","isNewTrack","nativeTrack","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","createAnswer","mediaSectionsInOffer","localTrack","reducedSize","candidateString","trim","senderOrReceiver","promises","all","allStats","results","ortcObjectName","nativeGetstats","nativeStats","mapStats","methods","catch","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","shimReplaceTrack","replaceTrack","setTrack","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","preferredMediaSource","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","onSucc","onErr","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimLocalStreamsAPI","_localStreams","_addTrack","index","tracks","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","failureCallback","options","promise","withCallback","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","shimTrackEventTransceiver","RTCTransceiver","shimCreateOfferLegacy","origCreateOffer","audioTransceiver","getTransceivers","setDirection","addTransceiver","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","shimMaxMessageSize","RTCSctpTransport","_sctp","sctpInDescription","mLine","parseMLine","isFirefox","maxMessageSize","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","remoteMMS","getMaxMessageSize","Number","POSITIVE_INFINITY","sctp","shimSendThrowTypeError","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","data","size","byteLength","readyState","shimConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","adapter","commonShim","chromeShim","browserShim","firefoxShim","edgeShim","safariShim"],"mappings":"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","file":"adapter_core.f331cc0e.map","sourceRoot":"..","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(cs) {\n    return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n      if (c.audio && !stream.getAudioTracks().length ||\n          c.video && !stream.getVideoTracks().length) {\n        stream.getTracks().forEach(track => {\n          track.stop();\n        });\n        throw new DOMException('', 'NotFoundError');\n      }\n      return stream;\n    }, e => Promise.reject(shimError_(e))));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    return getSourceId(constraints)\n      .then(sourceId => {\n        const widthSpecified = constraints.video && constraints.video.width;\n        const heightSpecified = constraints.video && constraints.video.height;\n        const frameRateSpecified = constraints.video &&\n          constraints.video.frameRate;\n        constraints.video = {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sourceId,\n            maxFrameRate: frameRateSpecified || 3\n          }\n        };\n        if (widthSpecified) {\n          constraints.video.mandatory.maxWidth = widthSpecified;\n        }\n        if (heightSpecified) {\n          constraints.video.mandatory.maxHeight = heightSpecified;\n        }\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n      });\n  };\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = (e) => {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', te => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === te.track.id);\n            } else {\n              receiver = {track: te.track};\n            }\n\n            const event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(track => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === track.id);\n            } else {\n              receiver = {track};\n            }\n            const event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        let sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n        origRemoveTrack.apply(this, arguments);\n        const idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(track => {\n        const sender = this._senders.find(s => s.track === track);\n        if (sender) { // remove sender\n          this._senders.splice(this._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(receiver => receiver._pc = this);\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams)\n      .map(streamId => this._shimmedLocalStreams[streamId][0]);\n  };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    const sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          this._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (this._shimmedLocalStreams[streamId].length === 1) {\n          delete this._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return this.shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    const nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n    delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    const streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 ||\n        !streams[0].getTracks().find(t => t === track)) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException(\n        'The adapter.js addTrack polyfill only supports a single ' +\n        ' stream which is associated with the specified track.',\n        'NotSupportedError');\n    }\n\n    const alreadyExists = this.getSenders().find(s => s.track === track);\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    const oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      const newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(s => s.track === track);\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    window.RTCPeerConnection.prototype[method] = function() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    };\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    const isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    let stream;\n    Object.keys(this._streams).forEach(streamid => {\n      const hasTrack = this._streams[streamid].getTracks()\n        .find(track => sender.track === track);\n      if (hasTrack) {\n        stream = this._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nexport function shimPeerConnection(window) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(selector,\n      successCallback, errorCallback) {\n    const args = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof arguments[0] !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        args[1](makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        arguments[0]]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(successCallback, errorCallback);\n  };\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator.mediaDevices);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    if (!(constraints && constraints.video)) {\n      const err = new DOMException('getDisplayMedia without video ' +\n          'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = {mediaSource: preferredMediaSource};\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(\n    selector,\n    onSucc,\n    onErr\n  ) {\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(sender => {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        this.removeTrack(sender);\n      }\n    });\n  };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      stream.getTracks().forEach(track => _addTrack.call(this, track, stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [stream];\n        } else if (!this._localStreams.includes(stream)) {\n          this._localStreams.push(stream);\n        }\n      }\n      return _addTrack.call(this, track, stream);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      const index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      const tracks = stream.getTracks();\n      this.getSenders().forEach(sender => {\n        if (tracks.includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      const pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function(e) {\n          e.streams.forEach(stream => {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const createOffer = prototype.createOffer;\n  const createAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      const newIceServers = [];\n      for (let i = 0; i < pcConfig.iceServers.length; i++) {\n        let server = pcConfig.iceServers[i];\n        if (!server.hasOwnProperty('urls') &&\n            server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n      // defined for some reason even when window.RTCTransceiver is not.\n      !window.RTCTransceiver) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      const audioTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.sender.track &&\n        transceiver.sender.track.kind === 'audio');\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true &&\n          !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      const videoTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.sender.track &&\n        transceiver.sender.track.kind === 'video');\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true &&\n          !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n    this._sctp = null;\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      let maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      const sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function() {\n    const dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n"]}