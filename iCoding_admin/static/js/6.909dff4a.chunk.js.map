{"version":3,"sources":["../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/keys.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js"],"names":["baseIsEqualDeep","__webpack_require__","isObjectLike","module","exports","baseIsEqual","value","other","bitmask","customizer","stack","arrayLikeKeys","baseKeys","isArrayLike","object","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","prop","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","srcValue","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","MapCache","setCacheAdd","setCacheHas","__data__","has","HASH_UNDEFINED","predicate","Symbol","Uint8Array","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","tag","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","isPrototype","nativeKeys","overArg","DataView","Map","Promise","Set","WeakMap","baseGetTag","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","Ctor","ctorString","getNative","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","iteratee","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","eachFunc","fromRight","iterable","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","isKey","toKey","path","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","baseGet","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","outline","cssModule","innerRef","Card","Tag","attributes","classes","CardBody"],"mappings":"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","file":"static/js/6.909dff4a.chunk.js","sourcesContent":["var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}